<?xml version="1.0"?>
 <launch>
<arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
<arg name="base_frame" default="base_footprint"/>
<arg name="odom_frame" default="nav"/>
<arg name="pub_map_odom_transform" default="true"/>
<arg name="scan_subscriber_queue_size" default="5"/>
<arg name="scan_topic" default="scan"/>
<arg name="map_size" default="1024"/>

<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen"> 

    <!-- Frame names -->
<param name="map_frame" value="/map"/>
<param name="base_frame" value="/base_frame"/>
<param name="odom_frame" value="/base_frame"/>
<!-- Tf use -->
<param name="use_tf_scan_transformation" value="true"/>
<param name="use_tf_pose_start_estimate" value="false"/>
<param name="pub_map_odom_transform" value="true"/>


    <!-- Map size / start point -->
    <param name="map_resolution" value="0.03"/>
    <param name="map_size" value="$(arg map_size)"/>
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="6" />

    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />    
    <param name="map_update_distance_thresh" value="0.4"/>
    <param name="map_update_angle_thresh" value="0.6" />
    <param name="laser_z_min_value" value = "-1.0" />
    <param name="laser_z_max_value" value = "1.0" />

    <!-- Advertising config --> 
    <param name="advertise_map_service" value="true"/>

    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="/zed/scan"/>

    <!-- Debug parameters -->

      <param name="output_timing" value="false"/>
      <param name="pub_drawings" value="false"/>
      <param name="pub_debug_output" value="false"/>
</node>

<!-- start path helper -->
<node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
    <param name="target_frame_name" type="string" value="/map" />
    <param name="source_frame_name" type="string" value="/base_frame" />
    <param name="trajectory_update_rate" type="double" value="4" />
    <param name="trajectory_publish_rate" type="double" value="0.25" />
</node>

<!-- start map saver -->
<node pkg="hector_geotiff" type="geotiff_node" name="hector_geotiff_node" output="screen" launch-prefix="nice -n 15">
    <remap from="map" to="/dynamic_map" />
    <param name="map_file_path" type="string" value="/home/ubuntu/tmp/maps/" />
    <param name="map_file_base_name" type="string" value="hector_slam_map" />
    <param name="geotiff_save_period" type="double" value="60" />
    <param name="draw_background_checkerboard" type="bool" value="true" />
    <param name="draw_free_space_grid" type="bool" value="true" />

    <param name="plugins" type="string" value="hector_geotiff_plugins/TrajectoryMapWriter" />
</node>

<!-- this publishes the transform between the base and laser -->

<!--<node pkg="tf" type="static_transform_publisher" name="base_laser_broadcaster" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_frame /laser_frame 40"/>-->

  <arg name="razor_config_file" default="$(find razor_imu_9dof)/config/my_razor.yaml"/>
  <node pkg="razor_imu_9dof" type="imu_node.py" name="imu_node" output="screen">
    <rosparam file="$(arg razor_config_file)" command="load"/>
  </node>

  <include file="$(find zed_wrapper)/launch/zed_tf.launch" />

  <arg name="svo_file" default=""/>
  
  <group ns="zed">
    <node name="zed_wrapper_node" pkg="zed_wrapper" type="zed_wrapper_node" args="$(arg svo_file)" output="screen">

      <param name="resolution"            value="1" />
      <param name="quality"               value="1" />
      <param name="sensing_mode"          value="1" />
      <param name="frame_rate"            value="10" />
      <param name="odometry_DB"           value="" />
      <param name="openni_depth_mode"     value="0" />

      <param name="rgb_topic"             value="rgb/image_rect_color" />
      <param name="rgb_cam_info_topic"    value="rgb/camera_info" />
      <param name="rgb_frame_id"          value="/base_frame" />

      <param name="left_topic"            value="left/image_rect_color" />
      <param name="left_cam_info_topic"   value="left/camera_info" />
      <param name="left_frame_id"         value="/base_frame" />

      <param name="right_topic"           value="right/image_rect_color" />
      <param name="right_cam_info_topic"  value="right/camera_info" />
      <param name="right_frame_id"        value="/base_frame" />

      <param name="depth_topic"           value="depth/image_rect_color" />
      <param name="depth_cam_info_topic"  value="depth/camera_info" />
      <param name="depth_frame_id"        value="/base_frame" />

      <param name="point_cloud_topic"     value="point_cloud/cloud" />
      <param name="cloud_frame_id"        value="/base_frame" />

      <param name="odometry_topic"                value="odom" />
<param name="odometry_frame_id" value="/odometry_frame" />
      <param name="odometry_transform_frame_id"   value="/base_frame" />


    </node>

      <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
        <param name="scan_height" value="100"/>
        <param name="output_frame_id" value="/base_frame"/>
        <param name="range_min" value="0.3"/>
        <param name="range_max" value="60"/>
        <remap from="image" to="/zed/depth/image_rect_color"/>
        <remap from="scan" to="/zed/scan"/>
     </node>
  </group>

  <node pkg="tf" type="static_transform_publisher" name="imu_to_baseimu" args="0 0 0 0 0 0 /base_imu_link /imu 100"/>
  <node pkg="tf" type="static_transform_publisher" name="baseimu_tobase" args="0 0 0 0 0 0 /base_frame /base_imu_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="zed_to_map" args="0 0 0 0 0 0 /base_frame /zed/scan 100"/>



  <node pkg="rviz" type="rviz" name="rviz_menu" 
    args="-d $(find hercules)/rviz/hercules.rviz"/>

</launch>